org: shankargupta
service: aws-python-http-api-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  stage: "dev"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ MyDynamoDbTable, Arn ]      
custom:
  tableName: HDMT-Table
  pythonRequirements:
    dockerizePip: true

functions:
  get:
    handler: handler.get_data
    events:
      - http:
          path: /
          method: get

  post:
    handler: handler.post_data
    events:
      - http:
          path: /
          method: post
          cors: true

  put:
    handler: handler.update_data
    events:
      - http:
          path: /
          method: put
  get_panelist_data:
    handler: handler.get_panelist_data
    events:
      - http:
          path: /panelist
          method: get

  post_panelist_data:
    handler: handler.post_panelist_data
    events:
      - http:
          path: /panelist
          method: post

  get_panel_data:
    handler: handler.get_panel_data
    events:
      - http:
          path: /panel
          method: get

  post_panel_data:
    handler: handler.post_panel_data
    events:
      - http:
          path: /panel
          method: post
  
  get_entity_data:
    handler: handler.get_entity_data
    events:
      - http:
          path: /entity
          method: get

  post_entity_data:
    handler: handler.post_entity_data
    events:
      - http:
          path: /entity
          method: post
  
  # lambda_handler:
  #   handler: handler.lambda_handler
  #   events:
  #     - httpApi:
  #         path: /
  #         method: get

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    MyUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: HDMT-User-pool
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: OFF
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        Schema:
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: email
            Required: true
    MyAppClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: hdmt-client
        UserPoolId: !Ref MyUserPool
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO

    # MyCodeCommitRepository:
    #   Type: AWS::CodeCommit::Repository
    #   Properties:
    #     RepositoryName: HDMT-repo
    #     RepositoryDescription: Repository for HDMT-backend
    #     Code:
    #       BranchName: main
    #       S3:
    #         Bucket: aws-python-http-api-proj-serverlessdeploymentbuck-1s5kqtssfzz1t
    #         Key: aws-python-http-api-project.zip

plugins:
  - serverless-python-requirements
